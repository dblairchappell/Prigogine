
population "households" [

    attributes [
        "reserveWages"
        "numJobs"
        "minWage"
    ]

    state "employed" [
        transition to "unemployed" if uniform(1,100) >= 75
        #action update("reserveWages", get("reserveWages") * 1.1) # update reserve wages
    ]

    state "unemployed" [

        transition to "employed" if get("reserveWages") < 15 [
            action [
                #print "updating numJobs: " + str(get("numJobs").mean())
                newValues = get("numJobs") + (random.random_sample() -0.5)
                setglobal("numJobs", append(getglobal("numJobs"), newValues.mean()))
                update("numJobs", newValues) # update num jobs
            ]
        ]

        action [ # update reserve wages
            #print "updating reserveWages: " + str(get("reserveWages").mean())
            newValues = maximum( (get("reserveWages") * 0.9), get("minWage") ) / 2
            setglobal("averageWages", append(getglobal("averageWages"), newValues.mean()))
            update("reserveWages", newValues)
        ]

        action [ # update minimum wages
            #print "updating minWage: " + str(get("minWage").mean())
            newValues = get("minWage") + (random.random_sample() -0.5)
            setglobal("minWage", append(getglobal("minWage"), newValues.mean()))
            update("minWage", newValues)
        ]
    ]
]




