messageboards [

	herbivoreLocations
	carnivoreTargets
	grassAmounts
	timeOfDay
]

agent ecosystem 1 [

	init time 0

	state day [
		transition night if time[t] == 12 [
			update time 0
		]
		update time time[t] + 1
		post timeOfDay "anyone" 1
	]

	state night [
		transition day if time[t] == 12 [
			update time 0
		]
		update time time[t] + 1
		post timeOfDay "anyone" 1
	]
]

agent grassPatch 1000 [

	init grassCover random 100
	init position [random 100, random 100]

	state grassGrowth [
		update grassCover [
			let timeOfDay (pull timeOfDay "anyone")
			let growth grassCover[t] + timeOfDay * ((100 - grassCover[t]) * 0.2)
			let grassEaten sum (pull grassEaten "self")
			growth - grassEaten
		]
	]
]

agent herbivore 500 [

	init energy random 100

	state grazing [
		transition resting if energy[t] >= 70 or (pull timeOfDay "anyone") == 0
		update energy [
			let energyUsed energy[t] * 0.2 // loses 20% of energy from grazing
			let energyGained 1000
			energy[t] + energyGained - energyUsed
		]
	]

	state resting [
		transition grazing if energy[t] <= 50 and (pull timeOfDay "anyone") == 1
		update energy energy[t] * 0.9
	]
]

agent carnivore 50 [

	init energy random 100

	state hunting [
		transition resting if energy[t] >= 70 or (pullFirst timeOfDay) == 0
		update energy [
			let var1 [
				pull energyHistory
				| meanEach
				| nOf 10
				| max
			]
			let var2 random 100 / random 5
			(var1 + var2) * 1.05
		]
	]

	state resting [
		transition hunting if self.energy[t] <= 50 and (pull timeOfDay "anyone") == 1
		update energy energy[t] * 0.9
	]
]