{'analysisCode': 'A Python script can be defined here to analyse your simulation results.', 'model': {'variables': ['meanWeeksEmployed', 'meanReserveWages', 'meanMinWages'], 'modelName': 'labourmarket', 'equations': 'meanWeeksEmployed[t+1] = households.weeksEmployed[t].mean()\nmeanReserveWages[t+1] = households.reserveWages[t].mean()\nmeanMinWages[t+1] = households.minWages[t].mean()', 'populations': {'households': {'variables': ['states', 'reserveWages', 'weeksEmployed', 'minWages'], 'equations': 'minWages[t+1] = minWages[t]\n\nstates[t+1][:] = 0, where (reserveWages[t] >= (minWages[t] + 100)) & (states[t] == 1)\nreserveWages[t+1] = reserveWages[t] * 1.1, where states[t] == 1\nweeksEmployed[t+1] = weeksEmployed[t] + 1, where states[t] == 1\n\nstates[t+1][:] = 1, where (reserveWages[t] < minWages[t]) & (states[t] == 0)\nreserveWages[t+1] = reserveWages[t] * 0.9, where states[t] == 0\nweeksEmployed[t+1] = weeksEmployed[t], where states[t] == 0'}}}, 'simulationCode': 'import time\nfrom prigogine.PrigogineCore import *\n\nstart = time.clock()\nlabourmarket = prigogine.loadmodel("LabourMarketModel.prm")\n\nnumHouseholds = 10000\nlabourmarket.households.create(numHouseholds)\n\nlabourmarket.households.states[0] = np.random.choice([1, 0], numHouseholds, [0.5,0.5])\nlabourmarket.households.reserveWages[0] = np.random.randint(100, size=numHouseholds)\nlabourmarket.households.weeksEmployed[0] = np.ones(numHouseholds)\nlabourmarket.households.minWages[0] = np.ones(numHouseholds) * 60\n\nlabourmarket.meanWeeksEmployed[0] = 0\nlabourmarket.meanReserveWages[0] = 0\nlabourmarket.meanMinWages[0] = 0\n\nmeanReserveWages = []\nmeanWeeksEmployed = []\nmeanMinWages = []\n\nfor i in range(100):\n    labourmarket.runModel(1)\n    meanWeeksEmployed.append(labourmarket.meanWeeksEmployed[labourmarket.readIndex])\n    meanReserveWages.append(labourmarket.meanReserveWages[labourmarket.readIndex])\n    meanMinWages.append(labourmarket.meanMinWages[labourmarket.readIndex])\n\nend = time.clock()\nprint "\\n\\ntime elapsed: " + str(end - start) + "s"\nplt.plot(meanReserveWages,\'r-\', meanWeeksEmployed, \'b-\', meanMinWages, \'g-\')\nplt.show()', 'notes': 'This is an example model to demonstate some basic functionality of Prigogine.'}